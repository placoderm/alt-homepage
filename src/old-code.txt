let [finalCitation, setFinalCitation] = useState("");
let [finalUrl, setFinalUrl] = useState("");
 
 
 // this may not be the right way to be doing things!
  useEffect(() => {
    let finalLayout;
    setInRangeMessage("");
    setErrorMessage("");

    if (inputUrl !== "") {
      setFinalCitation("");
      //test first part to see if it is good book citation and split off two number areas
      // 0 -> Whole find
      // 1 -> book, i.e. book letters
      // 2 -> verse/chapter flag
      // 3 -> firstNumber (either sutta or chapter)
      // 4 -> secondNumber (chapter)
      // 5 -> translator
      // 6 -> layout
      const urlInputArray = inputUrl.match(
        /(dn|mn|snp|sn|an|ud|khp|kp|iti|itv|it|vv|pv|dhp|thag|thig)[ .-]*(verse|v|chapter|ch|c|)[ .-]*(\d*)[ .-]*(\d*)[ .-]*(sujato|bodhi|suddhasso)*[ .-]*(english|line|side)*/i
      );

      if (urlInputArray !== null) {
        const book = fixAltBookCitations(urlInputArray[1].toLowerCase());
        const verseChapterFlag = fixAltVerseChapterFlags(urlInputArray[2].toLowerCase());
        const firstNumber = parseInt(urlInputArray[3], 10);
        const secondNumber = parseInt(urlInputArray[4], 10);

        // ---------------------DN, MN, Khp, Iti, Pv, Vv
        if (["dn", "mn", "kp", "iti", "pv", "vv"].includes(book) && firstNumber > 0) {
          if (structure[book].chapters && secondNumber > 0) {
            if (firstNumber > Object.keys(structure[book].chapters).length) {
              setErrorMessage(`Chapter number too high. Does not exist in ${structure[book].pali_name}`);
            } else if (secondNumber > structure[book].chapters[firstNumber]) {
              setErrorMessage(`Sutta number too high. Does not exist in ${structure[book].pali_name}`);
            } else {
              setFinalCitation(`${book}${secondNumber + structure[book].conversion_offset[firstNumber]}`);
              setInRangeMessage("Citation changed in URL.");
            }
          } else if (firstNumber > structure[book].suttas) {
            setErrorMessage(`Sutta number too high. Does not exist in ${structure[book].pali_name}`);
            setFinalCitation("");
          } else if (firstNumber > 0) {
            setFinalCitation(`${book}${firstNumber}`);
            setInRangeMessage("");
          }
        }

        // ---------------------ANGUTTARA NIKAYA & SAMYUTTA NIKAYA & Thag &Thig
        if (["sn", "an", "thag", "thig"].includes(book) && firstNumber > 0) {
          const chapter = firstNumber;
          const sutta = secondNumber;

          if (chapter > Object.keys(structure[book].chapters).length) {
            setErrorMessage(`Chapter number too high. Does not exist in ${structure[book].pali_name}`);
            setFinalCitation("");
          } else if (!sutta) {
            setFinalCitation(`${book}${chapter}`);
            setTranslator("");
            setInRangeMessage("URL given is to whole chapter");
          } else if (sutta > structure[book].chapters[chapter].max) {
            setErrorMessage(`Sutta number too high. Does not exist in ${structure[book].pali_name}`);
            setFinalCitation("");
          } else if ((secondNumber > 0) & structure[book].chapters[chapter].range_suttas.length) {
            for (let i = 0; i < structure[book].chapters[chapter].range_suttas.length; i++) {
              const [lower, upper] = structure[book].chapters[chapter].range_suttas[i];
              if ((sutta >= lower) & (sutta <= upper)) {
                setFinalCitation(`${book}${chapter}.${lower}-${upper}`);
                setInRangeMessage("Citation given is found in a range of citations");
                break;
              } else {
                setFinalCitation(`${book}${chapter}.${sutta}`);
                setInRangeMessage("");
              }
            }
          } else if (secondNumber > 0) {
            setFinalCitation(`${book}${chapter}.${sutta}`);
            setInRangeMessage("");
          }
        }

        // --------------------------- UDANA
        if (book === "ud" && firstNumber > 0) {
          const chapter = firstNumber;
          const sutta = secondNumber;
          // if there is no second number
          //    if firstNumber <= total number of suttas
          //      then convert to proper citation
          //      else reject as sutta being too high
          // if there *is* a second number
          //      if the firstNumber > number of chapters
          //         then reject as chapter number too high
          //          else if secondNumber<= number of suttas in chapter
          //              then output proper citation
          //              else reject as sutta number too high
          if (firstNumber > Object.keys(structure[book].chapters).length) {
            setErrorMessage(`Chapter number too high. Does not exist in ${structure[book].pali_name}`);
            setFinalCitation("");
          } else if (sutta > structure[book].chapters[chapter]) {
            setErrorMessage(`Sutta number too high. Does not exist in ${structure[book].pali_name}`);
            setFinalCitation("");
          } else if (sutta > 0) {
            setFinalCitation(`${book}${chapter}.${sutta}`);
            setInRangeMessage("");
          }
        }

        // --------------------------- SUTTA NIPĀTA
        if (book === "snp" && firstNumber > 0) {
          const chapter = firstNumber;
          const sutta = secondNumber;
          if (firstNumber > Object.keys(structure[book].chapters).length) {
            setErrorMessage(`Chapter number too high. Does not exist in ${structure[book].pali_name}`);
            setFinalCitation("");
          } else if (sutta > structure[book].chapters[chapter]) {
            setErrorMessage(`Sutta number too high. Does not exist in ${structure[book].pali_name}`);
            setFinalCitation("");
          } else if (sutta > 0) {
            setFinalCitation(`${book}${chapter}.${sutta}`);
            setInRangeMessage("");
          }
        }

        // --------------------------- DHAMMAPADA
        if (book === "dhp" && firstNumber > 0) {
          if (firstNumber > structure[book].suttas) {
            setErrorMessage(`Sutta number too high. Does not exist in ${structure[book].pali_name}`);
            setFinalCitation("");
            // 26 is hard coded twice below. could be set based on number of chapters
          } else if (((firstNumber > 26) | (verseChapterFlag === "v")) & (verseChapterFlag !== "c")) {
            for (let i = 0; i < structure[book].range_suttas.length; i++) {
              const [lower, upper] = structure[book].range_suttas[i];
              if ((firstNumber >= lower) & (firstNumber <= upper)) {
                setFinalCitation(`${book}${lower}-${upper}`);
                setInRangeMessage("Citation given is found in a range of citations");
                break;
              }
            }
          } else if (verseChapterFlag === "c") {
            if (firstNumber > 26) {
              setErrorMessage(`Chapter number too high. Does not exist in ${structure[book].pali_name}`);
              setFinalCitation("");
            } else {
              //process chapter into url
              const [lower, upper] = structure[book].range_suttas[firstNumber - 1];
              setFinalCitation(`${book}${lower}-${upper}`);
            }
          } else {
            const [lower, upper] = structure[book].range_suttas[firstNumber - 1];
            setFinalCitation(`${book}${lower}-${upper}`);
            setErrorMessage(`URL given is for chapter. For verse, add ‘v’ before number`);
          }
        }

        // =========================== END OF BOOKS
      } else {
        setErrorMessage("");
      }
    }

    if (finalCitation === "") {
      setFinalUrl("https://suttacentral.net/");
    } else {
      if (translator !== "/en/sujato") {
        finalLayout = "";
      } else {
        finalLayout = layout;
      }
      setFinalUrl("https://suttacentral.net/" + finalCitation + translator + finalLayout);
    }
  }, [finalCitation, inputUrl, translator, layout]);

  ============================================

   function fixAltVerseChapterFlags(flag) {
    if ((flag === "v") | (flag === "verse")) {
      return "v";
    } else if ((flag === "c") | (flag === "ch") | (flag === "chapter")) {
      return "c";
    } else {
      return flag;
    }
  }



  ====================
    function fixAltBookCitations(book) {
    if ((book === "itv") | (book === "it")) {
      return "iti";
    } else if (book === "khp") {
      return "kp";
    } else {
      return book;
    }
  }



  ===================== button code=================
            <a className="url-button-link" target="_blank" rel="noreferrer" href={finalUrl}>
            <div id="url-button" className={clsx({ nolink: finalCitation === "", "url-button-class": true, SC: true })}>
              <div className="image-container">
                <img className="logoImage" width="20px" src={SC}></img>
              </div>
              {finalUrl.slice(8)}
            </div>
          </a>